#!/usr/bin/perl

use strict;
use warnings;
use utf8;
use FindBin;
use lib "$FindBin::Bin/../lib";
use Getopt::Long;
use Pod::Usage;
use Log::Minimal;
use JSON::XS;

use Kurado;
use Kurado::ConfigLoader;

$Log::Minimal::AUTODUMP = 1;

my $interval = 1;
my $max_delay = 0;
Getopt::Long::Configure ("no_ignore_case");
GetOptions(
    "c|config=s"   => \my $path,
    "h|help"     => \my $help,
    "v|version"  => \my $version,
    "dump-json"  => \my $dump_json,
);

if ( $version ) {
    print "Kurado version $Kurado::VERSION\n";
    print "Try `kurado_worker --help` for more options.\n\n";
    exit 0;
}

if ( $help ) {
    pod2usage(-verbose=>2,-exitval=>0);
}

if ( !$path ) {
    pod2usage(-verbose=>0,-exitval=>1);
}

infof("loading config..");
my $loader = Kurado::ConfigLoader->new(path=>$path);

if ( $dump_json ) {
    print JSON::XS->new->convert_blessed->canonical->pretty->encode($loader->dump);
    exit;
}

print $loader->statistics;
print "OK. config loaded!\n\n";


my $host = $loader->host_by_address('127.0.0.1');
my $compile = Kurado::Plugin::Compile->new(
    config => $loader->config,
);

my ($stdout, $stderr, $success) = $compile->run(
    host => $host,
    plugin => $host->plugins->[0],
    type => 'view',
);

print "====\n";
print join "========\n",$stdout, $stderr, $success;
print "\n";

__END__

=head1 NAME

kurado_config - Kurado config test

=head1 SYNOPSIS

  
  # run 
  % kurado_config -c config.yml

=head1 DESCRIPTION

test config

=head1 OPTIONS

=over 4

=item -v --version

Display version

=item -h --help

Display help

=back

=head1 AUTHOR

Masahiro Nagano <kazeburo {at} gmail.com>

=head1 LICENSE

This library is free software; you can redistribute it and/or modify it
under the same terms as Perl itself.


# Local Variables:
# mode: cperl
# End:
